@use "sass:color";
@use "var" as *;
/// Ayuda a aclara el color para el uso de clases

@mixin colors($color, $propetics){
	&-focusw:focus-within,
	&-hover:hover,
	&-focus:focus,
	&-visited:visited,
	&-active:active{
		#{$propetics}: $color !important;
	}
	&-before{
		&::before{
			#{$propetics}: $color !important;
		}
		&-focusw:focus-within,
		&-hover:hover,
		&-focus:focus,
		&-visited:visited,
		&-active:active{
			&::before{
				#{$propetics}: $color !important;
			}
		}
	}
	&-after{
		&::after{
			#{$propetics}: $color !important;
		}
		&-focusw:focus-within,
		&-hover:hover,
		&-focus:focus,
		&-visited:visited,
		&-active:active{
			&::after{
				#{$propetics}: $color !important;
			}
		}
	}
}

/// @example    .bg-red-l5 // el color ser치 5 veces m치s claro
/// @param      {Colors} $color - Color a iluminar
/// @param      {String} $property - Propiedad a aplicar ej. `color, background-color`
@mixin lightenColor($color, $property) {
	@for $i from 1 through 5 {
	  &-hover-l#{$i}:hover,
	  &-focus-l#{$i}:focus,
	  &-active-l#{$i}:active,
	  &-l#{$i} {
		#{$property}: color.scale($color, $lightness: $i * 5%) !important;
	  }
	}
  }
  
  /// Ayuda a oscurecer el color para el uso de clases
  /// @example    .bg-red-d5 // el color ser치 5 veces m치s oscuro
  /// @param      {Colors} $color - Color a oscurecer
  /// @param      {String} $property - Propiedad a aplicar ej. `color, background-color`
  @mixin darkenColor($color, $property) {
	@for $i from 1 through 5 {
	  &-hover-d#{$i}:hover,
	  &-focus-d#{$i}:focus,
	  &-active-d#{$i}:active,
	  &-d#{$i} {
		#{$property}: color.scale($color, $lightness: -($i * 5%)) !important;
	  }
	}
  }

// for social buttons

@mixin social-buttons-color ($color, $state-color) {
  background-color: $color;
  color: $white;

  &:focus,
  &:hover {
	background-color: $state-color;
	color: $white;
  }
  &:active,
  &:focus,
  &:active:focus {
	box-shadow: none;
  }

  &.btn-simple {
	color: $state-color;
	background-color: transparent;
	background-image: none !important;
	box-shadow: none;
	border: none;

	&:hover,
	&:focus,
	&:hover:focus,
	&:active,
	&:hover:focus:active {
	  color: $state-color;
	  background: transparent !important;
	  box-shadow: none !important;
	}
  }


  &.btn-neutral {
	color: $color;
	background-color: $white;

	&:hover,
	&:focus,
	&:active {
	  color: $state-color;
	}
  }
}


// Gradients
// By Bootstrap

// scss-docs-start gradient-bg-mixin
@mixin gradient-bg($color: null) {
  background-color: $color;

  @if $enable-gradients {
	background-image: var(--#{$variable-prefix}gradient);
  }
}
// scss-docs-end gradient-bg-mixin

// scss-docs-start gradient-mixins
// Horizontal gradient, from left to right
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-x($start-color: $gray-700, $end-color: $gray-800, $start-percent: 0%, $end-percent: 100%) {
  background-image: linear-gradient(to right, $start-color $start-percent, $end-color $end-percent);
}

// Vertical gradient, from top to bottom
//
// Creates two color stops, start and end, by specifying a color and position for each color stop.
@mixin gradient-y($start-color: $gray-700, $end-color: $gray-800, $start-percent: null, $end-percent: null) {
  background-image: linear-gradient(to bottom, $start-color $start-percent, $end-color $end-percent);
}

@mixin gradient-directional($start-color: $gray-700, $end-color: $gray-800, $deg: 45deg) {
  background-image: linear-gradient($deg, $start-color, $end-color);
}

@mixin gradient-x-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient(to right, $start-color, $mid-color $color-stop, $end-color);
}

@mixin gradient-y-three-colors($start-color: $blue, $mid-color: $purple, $color-stop: 50%, $end-color: $red) {
  background-image: linear-gradient($start-color, $mid-color $color-stop, $end-color);
}

@mixin gradient-radial($inner-color: $gray-700, $outer-color: $gray-800) {
  background-image: radial-gradient(circle, $inner-color, $outer-color);
}

@mixin gradient-striped($color: rgba($white, .15), $angle: 45deg) {
  background-image: linear-gradient($angle, $color 25%, transparent 25%, transparent 50%, $color 50%, $color 75%, transparent 75%, transparent);
}
// scss-docs-end gradient-mixins
